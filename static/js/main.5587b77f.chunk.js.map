{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timeId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","Component","App","hasClock","clockName","clockNameId","hundleClickEvent","hundleContextmenuEvent","event","preventDefault","getRandomName","value","now","toString","document","addEventListener","_prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,OAAS,EALX,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MAC7D,OAZP,kCAeE,WACEN,OAAOO,cAAcR,KAAKD,UAhB9B,oBAmBE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,cAAcC,OAAO,IAAK,YAhC1C,GAA2BK,aCDdC,EAAb,4MACEjB,MAAQ,CACNkB,UAAU,EACVC,UAAW,WAHf,EAMEC,YAAc,EANhB,EAuBEC,iBAAmB,WACjB,EAAKd,SAAS,CAAEW,UAAU,KAxB9B,EA2BEI,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAKjB,SAAS,CAAEW,UAAU,KA9B9B,EAiCEO,cAAgB,WACd,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,IApCpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,cAAe1B,KAAKkB,wBAC9CO,SAASC,iBAAiB,QAAS1B,KAAKiB,kBAExCjB,KAAKgB,YAAcf,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEY,UAAW,EAAKM,oBAC/B,QAdP,gCAiBE,SAAmBM,EAAgBC,GAC7BA,EAAUb,YAAcf,KAAKJ,MAAMmB,WAAaf,KAAKJ,MAAMkB,UAC7Db,OAAOG,QAAQyB,MAAf,uBAAqCD,EAAUb,UAA/C,eAA+Df,KAAKJ,MAAMmB,cAnBhF,oBAuCE,WACE,MAAgCf,KAAKJ,MAA7BkB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OAEE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GACC,cAAC,EAAD,CAAOL,KAAMM,WAhDvB,GAAyBH,aCNzBkB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.5587b77f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      window.console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hundleContextmenuEvent);\n    document.addEventListener('click', this.hundleClickEvent);\n\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      window.console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  hundleClickEvent = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hundleContextmenuEvent = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}