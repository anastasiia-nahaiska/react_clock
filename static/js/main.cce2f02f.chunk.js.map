{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timeId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","clockNameId","handleClickEvent","handleContextmenuEvent","event","preventDefault","getRandomName","value","now","toString","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,OAAS,EALX,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MAC7D,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAChCR,OAAOG,QAAQO,MAAf,uBAAqCH,EAAUC,KAA/C,eAA0DT,KAAKU,MAAMD,SAjB3E,kCAqBE,WACER,OAAOW,cAAcZ,KAAKD,UAtB9B,oBAyBE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YAtC1C,GAA2BO,aCDdC,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVC,UAAW,WAHf,EAMEC,YAAc,EANhB,EAuBEC,iBAAmB,WACjB,EAAKhB,SAAS,CAAEa,UAAU,KAxB9B,EA2BEI,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEa,UAAU,KA9B9B,EAiCEO,cAAgB,WACd,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,IApCpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,cAAe5B,KAAKoB,wBAC9CO,SAASC,iBAAiB,QAAS5B,KAAKmB,kBAExCnB,KAAKkB,YAAcjB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEc,UAAW,EAAKM,oBAC/B,QAdP,kCAiBE,WACEI,SAASE,oBAAoB,cAAe7B,KAAKoB,wBACjDO,SAASE,oBAAoB,QAAS7B,KAAKmB,kBAC3ClB,OAAOW,cAAcZ,KAAKkB,eApB9B,oBAuCE,WACE,MAAgClB,KAAKJ,MAA7BoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OAEE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GACC,cAAC,EAAD,CAAOP,KAAMQ,WAhDvB,GAAyBH,aCNzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.cce2f02f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      window.console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextmenuEvent);\n    document.addEventListener('click', this.handleClickEvent);\n\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextmenuEvent);\n    document.removeEventListener('click', this.handleClickEvent);\n    window.clearInterval(this.clockNameId);\n  }\n\n  handleClickEvent = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextmenuEvent = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}